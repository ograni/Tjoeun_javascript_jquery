    function insertData(){
        var afterDayEl = $('#header > .afterDay');
        // 가운데 화면을 기준으로 왼쪽 상하단 부분 전부(아이콘과 내일, 모래의 날짜와 기온)
        var todayEl = $('#header > .today');
        // 가운데 화면을 기준으로 오른쪽 상하단 부분 전부(오늘의 기온과 날짜)
        var todayTemp = todayEl.find('> .temp > .c');
        // 오늘의 기온 (큰 문자로 중앙에 위치)
        var todayDate = todayEl.find('> .date');
        // 오늘의 날짜 (중앙 오른쪽에 위치)
        var todayWeatherIcon = afterDayEl.find('> .weather_icon > img');
        var iconRoot = 'img/weather_icon/';
        // 예제에 들어갈 아이콘 이미지의 폴더 주소를 미리 변수에 할당
        var bgRoot = 'img/weather_bg/';
        // 예제에 들어갈 배경 이미지의 폴더 주소를 미리 변수에 할당
        var secondHighTemp = afterDayEl.find('> .dateweek > .number > .high');
        var secondLowTemp = afterDayEl.find('> .dateweek > .number > .low');
        var secondDate = afterDayEl.find('> .dateweek > .datecontent');
        var thirdHighTemp = afterDayEl.find('> .dateweek > .number02 > .high');
        var thirdLowTemp = afterDayEl.find('> .dateweek > .number02 > .low');
        var thirdDate = afterDayEl.find('> .dateweek > .datecontent02');
        // 1.내일의 최고기온, 2.내일의 최저기온, 3.내일의 날짜를 각각 변수에 할당
        // 1.모레의 최고기온, 2.모레의 최저기온, 3.모레의 날짜를 각각 변수에 할당
        
        var condition = weatherData.query.results.channel.item.condition;
        // 현재의 기상 정보가 포함된 태그 부분은 데이터에서 파싱하여 변수에 할당
        // 이때 파싱된 데이터의 타입은 객체임
        var forecast = weatherData.query.results.channel.item.forecast;
        // 앞으로 5일의 기상 정보가 담겨진 데이터 역시 파싱하여 변수에 할당
        // 이때 파싱된 데이터의 타입은 배열임
        
        todayTemp.text(condition.temp);
        // 오늘의 기온을 수정
        todayDate.text(forecast[0].day + ' ,' + forecast[0].date);
        // 오늘의 날짜를 수정

		/* 요일 한글로 바꾸기 */
		if ('Sun'===forecast[0].day) {
			forecast[0].day='일';
		} else if ('Mon'===forecast[0].day) {
			forecast[0].day='월';
		} else if ('Tue'===forecast[0].day) {
			forecast[0].day='화';
		} else if ('Wed'===forecast[0].day) {
			forecast[0].day='수';
		} else if ('Thu'===forecast[0].day) {
			forecast[0].day='목';
		} else if ('Fri'===forecast[0].day) {
			forecast[0].day='금';
		} else {
			forecast[0].day='토';
		}
		todayDate.text(forecast[0].day + ' ,' + forecast[0].date);	
		/* 요일 한글로 바꾸기 끝 */	

        var todayCode = parseInt(forecast[0].code);
        // 오늘의 기상 코드를 파싱하여 형태를 숫자로 변형
        var iconURL = iconRoot + imageArr[todayCode];
        // 윗 줄에서 가져온 기상 코드 번호를 imageArr 배열의 index 번호를 활용하여
        // 미리 지정해 놓은 이미지 주소를 가져와 iconURL 변수에 할당
        todayWeatherIcon.attr('src', iconURL);
        // 위 줄에서 가져온 이미지 주소로 오늘의 기상 아이콘을 수정
        
        var bgURL = bgRoot + bgArr[todayCode];
        // 윗 줄에서 가져온 기상 코드 번호를 bgArr 배열의 index 번호를 활용하여
        // 미리 지정해 놓은 배경 이미지 주소를 가져와 bgURL 변수에 할당
        $('#wrap').css('background-image','url(' + bgURL + ')');
        // 위 줄에서 가져온 배경 이미지 주소로 오늘의 배경 이미지를 수정
        
        secondHighTemp.text(forecast[1].high);
        // 1.내일의 최고기온을 수정, 2.내일의 최저기온을 수정, 3.내일의 날짜를 수정
        secondLowTemp.text(forecast[1].low);
        secondDate.text(forecast[1].date);
        
        thirdHighTemp.text(forecast[2].high);
        // 1.모레의 최고기온을 수정, 2.모레의 최저기온을 수정, 3.모레의 날짜를 수정
        thirdLowTemp.text(forecast[2].low);
        thirdDate.text(forecast[2].date);
    }